package com.capstone.ics.model;
// Generated Mar 22, 2016 9:24:22 PM by Hibernate Tools 4.3.1

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javafx.beans.property.ObjectProperty;
import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.beans.property.StringProperty;
import javax.persistence.Access;
import javax.persistence.AccessType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users")
@Access(value = AccessType.PROPERTY)
public class Users implements java.io.Serializable{

    private Integer pkUserId;
//    private List<InventoryItems> items = new ArrayList<>();
    //TO DOOOOO: Initialize attribute inside constructor.
    private StringProperty firstName = new SimpleStringProperty(this, "FIRST_NAME");
    private StringProperty lastName = new SimpleStringProperty(this, "LAST_NAME");
    private ObjectProperty<Date> birthDate = new SimpleObjectProperty<>(this, "BIRTH_DATE");
    ;
    private StringProperty emailAddress = new SimpleStringProperty(this, "EMAIL_ADDRESS");
    private StringProperty phoneNumber = new SimpleStringProperty(this, "PHONE_NUMBER");
    private StringProperty gender = new SimpleStringProperty(this, "GENDER");
    private StringProperty otherUserDetails = new SimpleStringProperty(this, "OTHER_USER_DETAILS");
    private StringProperty lastUpdatedBy = new SimpleStringProperty(this, "LAST_UPDATED_BY");
    private ObjectProperty<Date> lastUpdatedDate = new SimpleObjectProperty<>(this, "LAST_UPDATED_DATE");
    ;
    private StringProperty createdBy = new SimpleStringProperty(this, "CREATED_BY");
    private ObjectProperty<Date> createdDate = new SimpleObjectProperty<>(this, "CREATED_DATE");

    ;
    
    private UserAddresses address = new UserAddresses();
    private Credentials userCredentials = new Credentials();

    public Users() {
    }

    public Users(UserAddresses address, Credentials userCredentials) {
        this.address = address;
        this.userCredentials = userCredentials;
    }

    public Users(int fkJobTitleCode, String firstName, String lastName, Date birthDate, String emailAddress, String phoneNumber, String gender, Date lastUpdatedDate, String createdBy, Date createdDate, UserAddresses address) {
        setFirstName(firstName);
        setLastName(lastName);
        setBirthDate(birthDate);
        setEmailAddress(emailAddress);
        setPhoneNumber(phoneNumber);
        setGender(gender);
        setCreatedBy(createdBy);
        setCreatedDate(createdDate);
        setAddress(address);
    }

    public Users(int fkJobTitleCode, String firstName, String lastName, Date birthDate, String emailAddress, String phoneNumber, String gender, String otherUserDetails, String lastUpdatedBy, Date lastUpdatedDate, String createdBy, Date createdDate, UserAddresses address) {

        setFirstName(firstName);
        setLastName(lastName);
        setBirthDate(birthDate);
        setEmailAddress(emailAddress);
        setPhoneNumber(phoneNumber);
        setGender(gender);
        setOtherUserDetails(otherUserDetails);
        setLastUpdatedBy(lastUpdatedBy);
        setLastUpdatedDate(lastUpdatedDate);
        setCreatedBy(createdBy);
        setCreatedDate(createdDate);
        setAddress(address);
    }

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "PK_USER_ID")
    public Integer getPkUserId() {
        return this.pkUserId;
    }

    public void setPkUserId(Integer pkUserId) {
        this.pkUserId = pkUserId;
    }

//    @OneToMany(cascade = CascadeType.ALL)
//    public List<InventoryItems> getItems() {
//        return items;
//    }
//
//    public void setItems(List<InventoryItems> items) {
//        this.items = items;
//    }

    @Column(name = "FIRST_NAME")
    public String getFirstName() {
        return firstNameProperty().get();
    }

    public void setFirstName(String firstName) {
        this.firstName.set(firstName);
    }

    public StringProperty firstNameProperty() {
        return this.firstName;
    }

    @Column(name = "LAST_NAME")
    public String getLastName() {
        return lastNameProperty().get();
    }

    public void setLastName(String lastName) {
        this.lastName.set(lastName);
    }

    public StringProperty lastNameProperty() {
        return this.lastName;
    }

    @Column(name = "BIRTH_DATE")
    public Date getBirthDate() {
        return birthdayProperty().get();
    }

    public void setBirthDate(Date birthDate) {
        this.birthDate.set(birthDate);
    }

    public ObjectProperty<Date> birthdayProperty() {
        return this.birthDate;
    }

    @Column(name = "EMAIL_ADDRESS")
    public String getEmailAddress() {
        return emailPropertyProperty().get();
    }

    public void setEmailAddress(String emailAddress) {
        this.emailAddress.set(emailAddress);
    }

    public StringProperty emailPropertyProperty() {
        return this.emailAddress;
    }

    @Column(name = "PHONE_NUMBER")
    public String getPhoneNumber() {
        return phoneNumberProperty().get();
    }

    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber.set(phoneNumber);
    }

    public StringProperty phoneNumberProperty() {
        return this.phoneNumber;
    }

    @Column(name = "GENDER")
    public String getGender() {
        return genderProperty().get();
    }

    public void setGender(String gender) {
        this.gender.set(gender);
    }

    public StringProperty genderProperty() {
        return this.gender;
    }

    @Column(name = "OTHER_USER_DETAILS")
    public String getOtherUserDetails() {
        return otherDetailsProperty().get();
    }

    public void setOtherUserDetails(String otherUserDetails) {
        this.otherUserDetails.set(otherUserDetails);
    }

    public StringProperty otherDetailsProperty() {
        return this.otherUserDetails;
    }

    @Column(name = "LAST_UPDATED_BY")
    public String getLastUpdatedBy() {
        return lastUpdatedByProperty().get();
    }

    public void setLastUpdatedBy(String lastUpdatedBy) {
        this.lastUpdatedBy.set(lastUpdatedBy);
    }

    public StringProperty lastUpdatedByProperty() {
        return this.lastUpdatedBy;
    }

    @Column(name = "LAST_UPDATED_DATE")
    public Date getLastUpdatedDate() {
        return lastUpdatedDateProperty().get();
    }

    public void setLastUpdatedDate(Date lastUpdatedDate) {
        this.lastUpdatedDate.set(lastUpdatedDate);
    }

    public ObjectProperty<Date> lastUpdatedDateProperty() {
        return this.lastUpdatedDate;
    }

    @Column(name = "CREATED_BY")
    public String getCreatedBy() {
        return CreatedByProperty().get();
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy.set(createdBy);
    }

    public StringProperty CreatedByProperty() {
        return this.createdBy;
    }

    @Column(name = "CREATED_DATE")
    public Date getCreatedDate() {
        return CreatedDateProperty().get();
    }

    public ObjectProperty<Date> CreatedDateProperty() {
        return this.createdDate;
    }

    public void setCreatedDate(Date createdDate) {
        this.createdDate.set(createdDate);
    }

    @OneToOne(cascade = CascadeType.ALL, mappedBy = "users")
    public UserAddresses getAddress() {
        return address;
    }

    public void setAddress(UserAddresses address) {
        this.address = address;
    }

    @OneToOne(cascade = CascadeType.ALL, mappedBy = "users")
    public Credentials getUserCredentials() {
        return userCredentials;
    }

    public void setUserCredentials(Credentials userCredentials) {
        this.userCredentials = userCredentials;
    }

    
    
}
